package com.example.preparify_jobpreparationapp.ui.Fragments

import com.example.preparify_jobpreparationapp.Repository.UserRepository
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.*
import androidx.fragment.app.Fragment
import androidx.lifecycle.ViewModelProvider
import androidx.navigation.fragment.findNavController
import com.example.preparify_jobpreparationapp.R
import com.example.preparify_jobpreparationapp.data.User
import com.example.preparify_jobpreparationapp.viewmodels.UserViewModel
import com.example.preparify_jobpreparationapp.viewmodels.UserViewModelFactory
import com.google.android.material.textfield.TextInputEditText

class RegistrationFragment : Fragment() {

    private lateinit var userViewModel: UserViewModel
    private lateinit var userRepository: UserRepository

    // UI Elements
    private lateinit var nameInput: TextInputEditText
    private lateinit var ageInput: TextInputEditText
    private lateinit var emailInput: TextInputEditText
    private lateinit var passwordInput: TextInputEditText
    private lateinit var confirmPasswordInput: TextInputEditText
    private lateinit var genderRadioGroup: RadioGroup
    private lateinit var occupationRadioGroup: RadioGroup
    private lateinit var registerButton: Button

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        val view = inflater.inflate(R.layout.fragment_registration, container, false)

        // Initialize the repository and ViewModel
        userRepository = UserRepository() // Assuming you have a way to instantiate this repository
        val factory = UserViewModelFactory(userRepository)
        userViewModel = ViewModelProvider(this, factory).get(UserViewModel::class.java)

        // Bind UI elements with IDs
        nameInput = view.findViewById(R.id.nameEditText)
        ageInput = view.findViewById(R.id.ageEditText)
        emailInput = view.findViewById(R.id.emailEditText)
        passwordInput = view.findViewById(R.id.passwordEditText)
        confirmPasswordInput = view.findViewById(R.id.confirmPasswordEditText)
        genderRadioGroup = view.findViewById(R.id.genderRadioGroup)
        occupationRadioGroup = view.findViewById(R.id.occupationRadioGroup)
        registerButton = view.findViewById(R.id.registerButton)

        // Register button click listener
        registerButton.setOnClickListener {
            registerUser()
        }

        // Observe the user LiveData from ViewModel
        userViewModel.user.observe(viewLifecycleOwner) { registeredUser ->
            if (registeredUser != null) {
                Toast.makeText(context, "Registration successful!", Toast.LENGTH_SHORT).show()
                // Navigate to the HomeFragment
                findNavController().navigate(R.id.action_registrationFragment_to_courseCategoryFragment)
            }
        }

        return view
    }

//    private fun registerUser() {
//        val name = nameInput.text.toString().trim()
//        val age = ageInput.text.toString().trim()
//        val email = emailInput.text.toString().trim()
//        val password = passwordInput.text.toString().trim()
//        val confirmPassword = confirmPasswordInput.text.toString().trim()
//
//        // Get selected gender and occupation
//        val selectedGenderId = genderRadioGroup.checkedRadioButtonId
//        val selectedOccupationId = occupationRadioGroup.checkedRadioButtonId
//
//        if (selectedGenderId == -1 || selectedOccupationId == -1) {
//            Toast.makeText(context, "Please select gender and occupation", Toast.LENGTH_SHORT).show()
//            return
//        }
//
//        val gender = view?.findViewById<RadioButton>(selectedGenderId)?.text.toString()
//        val occupation = view?.findViewById<RadioButton>(selectedOccupationId)?.text.toString()
//
//        // Validate input fields
//        if (name.isEmpty() || age.isEmpty() || email.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
//            Toast.makeText(context, "Please fill in all fields", Toast.LENGTH_SHORT).show()
//            return
//        }
//
//        if (password != confirmPassword) {
//            Toast.makeText(context, "Passwords do not match", Toast.LENGTH_SHORT).show()
//            return
//        }
//
//        // Pass data to ViewModel for registration
//        val newUser = User(
//            id = "", // This will be generated by Firebase
//            name = name,
//            email = email,
//            age = age,
//            gender = gender,
//            occupation = occupation
//        )
//        userViewModel.registerUser(newUser, password)
//    }
private fun registerUser() {
    val name = nameInput.text.toString().trim()
    val ageString = ageInput.text.toString().trim() // Keep this as String for now
    val email = emailInput.text.toString().trim()
    val password = passwordInput.text.toString().trim()
    val confirmPassword = confirmPasswordInput.text.toString().trim()

    // Get selected gender and occupation
    val selectedGenderId = genderRadioGroup.checkedRadioButtonId
    val selectedOccupationId = occupationRadioGroup.checkedRadioButtonId

    if (selectedGenderId == -1 || selectedOccupationId == -1) {
        Toast.makeText(context, "Please select gender and occupation", Toast.LENGTH_SHORT).show()
        return
    }

    val gender = view?.findViewById<RadioButton>(selectedGenderId)?.text.toString()
    val occupation = view?.findViewById<RadioButton>(selectedOccupationId)?.text.toString()

    // Validate input fields
    if (name.isEmpty() || ageString.isEmpty() || email.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
        Toast.makeText(context, "Please fill in all fields", Toast.LENGTH_SHORT).show()
        return
    }

    if (password != confirmPassword) {
        Toast.makeText(context, "Passwords do not match", Toast.LENGTH_SHORT).show()
        return
    }

    // Convert age from String to Int
    val age = ageString

    // Pass data to ViewModel for registration
    val newUser = User(
        id = "", // This will be generated by Firebase
        name = name,
        email = email,
        age = age,
        gender = gender,
        occupation = occupation
    )
    userViewModel.registerUser(newUser, password)
}

}
